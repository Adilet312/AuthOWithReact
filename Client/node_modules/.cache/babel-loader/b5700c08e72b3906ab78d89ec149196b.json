{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/BooksReact/src/components/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport Library from './Library';\nimport { without, findIndex } from 'lodash';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.deleteBook = book => {\n      let tempList = without(this.state.bookList, book);\n      this.setState({\n        bookList: tempList\n      });\n    };\n\n    this.updateInfo = (key, value, id) => {\n      let tempBooks = this.state.bookList;\n      let findCurrentBookIndex = findIndex(tempBooks, {\n        bookId: id\n      });\n      tempBooks[findCurrentBookIndex][key] = value;\n      this.setState({\n        bookList: tempBooks\n      });\n    };\n\n    this.state = {\n      bookList: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('./bookList.json').then(data => data.json()).then(data => this.setState({\n      bookList: data\n    }));\n  }\n\n  render() {\n    const {\n      bookList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Library, {\n      books: bookList,\n      deleteBook: this.deleteBook,\n      updateInfo: this.updateInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;\n/*\n1.List all the books\n2.Sort books by ascending and descending order\n3.Search\n\n\n\nlet findCurrentBookIndex = findIndex(tempBooks,{bookId: id});\ntempBooks[findCurrentBookIndex][key] = value;\nsetBookList(tempBooks);\n*/","map":{"version":3,"sources":["/home/amt/Desktop/BooksReact/src/components/App.js"],"names":["React","Library","without","findIndex","App","Component","constructor","deleteBook","book","tempList","state","bookList","setState","updateInfo","key","value","id","tempBooks","findCurrentBookIndex","bookId","componentDidMount","fetch","then","data","json","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,EAAgBC,SAAhB,QAAgC,QAAhC;;AACA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAabC,UAba,GAaCC,IAAD,IAAU;AACrB,UAAIC,QAAQ,GAAGP,OAAO,CAAC,KAAKQ,KAAL,CAAWC,QAAZ,EAAsBH,IAAtB,CAAtB;AACA,WAAKI,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACD,KAhBY;;AAAA,SAiBbI,UAjBa,GAiBA,CAACC,GAAD,EAAKC,KAAL,EAAWC,EAAX,KAAkB;AAC7B,UAAIC,SAAS,GAAI,KAAKP,KAAL,CAAWC,QAA5B;AACA,UAAIO,oBAAoB,GAAGf,SAAS,CAACc,SAAD,EAAW;AAACE,QAAAA,MAAM,EAAEH;AAAT,OAAX,CAApC;AACAC,MAAAA,SAAS,CAACC,oBAAD,CAAT,CAAgCJ,GAAhC,IAAuCC,KAAvC;AACA,WAAKH,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAACM;AAAV,OAAd;AACD,KAtBY;;AAEX,SAAKP,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG;AADA,KAAb;AAID;;AACDS,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAGA,IAAI,CAACC,IAAL,EADb,EAECF,IAFD,CAEMC,IAAI,IAAG,KAAKX,QAAL,CAAc;AAACD,MAAAA,QAAQ,EAACY;AAAV,KAAd,CAFb;AAGD;;AAYDE,EAAAA,MAAM,GAAE;AACN,UAAM;AAACd,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEC,QAAhB;AAA0B,MAAA,UAAU,EAAI,KAAKJ,UAA7C;AAAyD,MAAA,UAAU,EAAI,KAAKM,UAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA/B+B;;AAiClC,eAAeT,GAAf;AACA","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Library from './Library';\nimport {without,findIndex} from 'lodash';\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      bookList : [],\n\n    }\n  }\n  componentDidMount(){\n    fetch('./bookList.json')\n    .then(data=> data.json())\n    .then(data=> this.setState({bookList:data}));\n  }\n\n  deleteBook = (book) => {\n    let tempList = without(this.state.bookList, book);\n    this.setState({bookList: tempList})\n  }\n  updateInfo = (key,value,id) => {\n    let tempBooks  = this.state.bookList;\n    let findCurrentBookIndex = findIndex(tempBooks,{bookId: id});\n    tempBooks[findCurrentBookIndex][key] = value;\n    this.setState({bookList:tempBooks});\n  }\n  render(){\n    const {bookList} = this.state;\n    return(\n      <div>\n        <Library books={bookList} deleteBook = {this.deleteBook} updateInfo = {this.updateInfo}/>\n      </div>\n    )\n  }\n}\nexport default App;\n/*\n1.List all the books\n2.Sort books by ascending and descending order\n3.Search\n\n\n\nlet findCurrentBookIndex = findIndex(tempBooks,{bookId: id});\ntempBooks[findCurrentBookIndex][key] = value;\nsetBookList(tempBooks);\n*/\n"]},"metadata":{},"sourceType":"module"}